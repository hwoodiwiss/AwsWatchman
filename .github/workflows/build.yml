name: build

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        include:
          - os: macos-latest
            os_name: macos
          - os: ubuntu-latest
            os_name: linux
          - os: windows-latest
            os_name: windows

    steps:

    - name: Checkout code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # v3.0.3

    - name: Build, Test and Publish
      shell: pwsh
      run: ./build.ps1
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
        NUGET_XMLDOC_MODE: skip
        TERM: xterm

    - name: Publish artifacts
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: artifacts-${{ matrix.os }}
        path: ./artifacts/packages

    - name: Publish NuGet packages
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: packages-${{ matrix.os }}
        path: ./artifacts/packages
        if-no-files-found: error

  publish-github:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    if: |
      github.event.repository.fork == false &&
      (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) ||
       startsWith(github.ref, 'refs/tags/v'))
    steps:

      - name: Download packages
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: packages-linux

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # v3.0.3

      - name: Publish NuGet packages to GitHub Packages
        run: dotnet nuget push "*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate --no-symbols --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

  publish-nuget:
    runs-on: ubuntu-latest
    if: |
        github.event.repository.fork == false &&
        startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download packages
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: packages-linux

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # v3.0.3

      - name: Push NuGet packages to NuGet.org
        run: dotnet nuget push "*.nupkg" --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate --source https://api.nuget.org/v3/index.json
